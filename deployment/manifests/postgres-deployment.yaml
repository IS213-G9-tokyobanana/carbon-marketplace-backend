apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose-resolved.yaml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose-resolved.yaml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/carbon-marketplace-backend-backend-bridged-network: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_MULTIPLE_DATABASES
              value: users,projects
            - name: POSTGRES_PASSWORD
              value: changeme
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: someuser
          image: postgres:13.3
          name: postgres
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/create_multiple_db.sh
              name: postgres-claim0
              readOnly: true
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      restartPolicy: Always
      volumes:
        - name: postgres-claim0
          persistentVolumeClaim:
            claimName: postgres-claim0
            readOnly: true
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
status: {}
