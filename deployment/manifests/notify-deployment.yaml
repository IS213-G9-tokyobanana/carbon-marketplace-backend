apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose-resolved.yaml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: notify
  name: notify
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: notify
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert -f docker-compose-resolved.yaml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/carbon-marketplace-backend-backend-bridged-network: "true"
        io.kompose.service: notify
    spec:
      containers:
        - env:
            - name: EXCHANGE
              value: topic_exchange
            - name: EXCHANGE_TYPE
              value: topic
            - name: MS_BASE_URL
              value: http://users:5000/users
            - name: RABBITMQ_HOSTNAME
              value: rabbitmq
            - name: RABBITMQ_PASSWORD
              value: guest
            - name: RABBITMQ_PORT
              value: "5672"
            - name: RABBITMQ_USERNAME
              value: guest
            - name: SENDGRID_API_KEY
              value: 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
            - name: VERIFIERS_EMAILS
              value: http://users:5000/users?role=verifier
          image: esdg9t1/notify:latest
          name: notify
          ports:
            - containerPort: 5000
          resources: {}
          volumeMounts:
            - mountPath: /app
              name: notify
      restartPolicy: Always
      volumes:
        - name: notify
          persistentVolumeClaim:
            claimName: notify
status: {}
