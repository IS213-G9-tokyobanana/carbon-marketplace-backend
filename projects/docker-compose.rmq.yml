version: '3.8'

volumes:
  db_data_test: {}

networks:
  flask_postgres_test:
    driver: bridge

services:
  db:
    image: postgres:latest
    container_name: ${POSTGRES_HOSTNAME}
    restart: always
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data_test:/var/lib/postgresql/data
    networks:
      - flask_postgres_test

  message_broker:
    image: rabbitmq:3-management
    container_name: ${RABBITMQ_HOSTNAME}
    hostname: ${RABBITMQ_HOSTNAME}
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      #HTTP management UI
      - "15672:15672"
      #AMQP protocol port
      - "5672:5672"
    networks:
      - flask_postgres_test

  projects_ms_flask:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: projects_ms_flask
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOSTNAME=${POSTGRES_HOSTNAME}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - RABBITMQ_HOSTNAME=${RABBITMQ_HOSTNAME}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
    ports:
      - "5000:5000"
    depends_on:
      - db
      - message_broker
    networks:
      - flask_postgres_test
  
